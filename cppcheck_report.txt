.github/workflows/chess.c:181:15: warning: Either the condition '(c1+2)!=8' is redundant or the array 'board[8][8]' is accessed at index board[*][8], which is out of bounds. [arrayIndexOutOfBoundsCond]
     if( board[r1-1][c1+2] == ' ' ) {  printf( "%d%d, " , r1-1 , c1+2 ) ; }
              ^
.github/workflows/chess.c:180:51: note: Assuming that condition '(c1+2)!=8' is not redundant
     if( board[r1+1][c1+2] == ' ' ) {  if( (c1+2) != 8 ) printf( "%d%d, " , r1+1 , c1+2 ) ; }
                                                  ^
.github/workflows/chess.c:181:15: note: Array index out of bounds
     if( board[r1-1][c1+2] == ' ' ) {  printf( "%d%d, " , r1-1 , c1+2 ) ; }
              ^
.github/workflows/chess.c:183:15: warning: Either the condition '(c1-1)>-1' is redundant or the array 'board[8][8]' is accessed at index board[*][-1], which is out of bounds. [negativeIndex]
     if( board[r1-2][c1-1] == ' ' )
              ^
.github/workflows/chess.c:178:50: note: Assuming that condition '(c1-1)>-1' is not redundant
     if( board[r1+2][c1-1] == ' ' ) { if( (c1-1) > -1 ) printf( "%d%d, " , r1+2, c1-1 ) ; }
                                                 ^
.github/workflows/chess.c:183:15: note: Negative array index
     if( board[r1-2][c1-1] == ' ' )
              ^
.github/workflows/chess.c:128:10: style: Unused variable: i [unusedVariable]
     int i , j , n ;
         ^
.github/workflows/chess.c:128:14: style: Unused variable: j [unusedVariable]
     int i , j , n ;
             ^
.github/workflows/chess.c:203:18: style: Unused variable: c [unusedVariable]
     int a , b , c , d ;
                 ^
.github/workflows/chess.c:203:22: style: Unused variable: d [unusedVariable]
     int a , b , c , d ;
                     ^
3_Implementations/Multifile/chess.c:181:15: warning: Either the condition '(c1+2)!=8' is redundant or the array 'board[8][8]' is accessed at index board[*][8], which is out of bounds. [arrayIndexOutOfBoundsCond]
     if( board[r1-1][c1+2] == ' ' ) {  printf( "%d%d, " , r1-1 , c1+2 ) ; }
              ^
3_Implementations/Multifile/chess.c:180:51: note: Assuming that condition '(c1+2)!=8' is not redundant
     if( board[r1+1][c1+2] == ' ' ) {  if( (c1+2) != 8 ) printf( "%d%d, " , r1+1 , c1+2 ) ; }
                                                  ^
3_Implementations/Multifile/chess.c:181:15: note: Array index out of bounds
     if( board[r1-1][c1+2] == ' ' ) {  printf( "%d%d, " , r1-1 , c1+2 ) ; }
              ^
3_Implementations/Multifile/chess.c:183:15: warning: Either the condition '(c1-1)>-1' is redundant or the array 'board[8][8]' is accessed at index board[*][-1], which is out of bounds. [negativeIndex]
     if( board[r1-2][c1-1] == ' ' )
              ^
3_Implementations/Multifile/chess.c:178:50: note: Assuming that condition '(c1-1)>-1' is not redundant
     if( board[r1+2][c1-1] == ' ' ) { if( (c1-1) > -1 ) printf( "%d%d, " , r1+2, c1-1 ) ; }
                                                 ^
3_Implementations/Multifile/chess.c:183:15: note: Negative array index
     if( board[r1-2][c1-1] == ' ' )
              ^
3_Implementations/Multifile/chess.c:128:10: style: Unused variable: i [unusedVariable]
     int i , j , n ;
         ^
3_Implementations/Multifile/chess.c:128:14: style: Unused variable: j [unusedVariable]
     int i , j , n ;
             ^
3_Implementations/Multifile/chess.c:203:18: style: Unused variable: c [unusedVariable]
     int a , b , c , d ;
                 ^
3_Implementations/Multifile/chess.c:203:22: style: Unused variable: d [unusedVariable]
     int a , b , c , d ;
                     ^
3_Implementations/chess.c:181:15: warning: Either the condition '(c1+2)!=8' is redundant or the array 'board[8][8]' is accessed at index board[*][8], which is out of bounds. [arrayIndexOutOfBoundsCond]
     if( board[r1-1][c1+2] == ' ' ) {  printf( "%d%d, " , r1-1 , c1+2 ) ; }
              ^
3_Implementations/chess.c:180:51: note: Assuming that condition '(c1+2)!=8' is not redundant
     if( board[r1+1][c1+2] == ' ' ) {  if( (c1+2) != 8 ) printf( "%d%d, " , r1+1 , c1+2 ) ; }
                                                  ^
3_Implementations/chess.c:181:15: note: Array index out of bounds
     if( board[r1-1][c1+2] == ' ' ) {  printf( "%d%d, " , r1-1 , c1+2 ) ; }
              ^
3_Implementations/chess.c:183:15: warning: Either the condition '(c1-1)>-1' is redundant or the array 'board[8][8]' is accessed at index board[*][-1], which is out of bounds. [negativeIndex]
     if( board[r1-2][c1-1] == ' ' )
              ^
3_Implementations/chess.c:178:50: note: Assuming that condition '(c1-1)>-1' is not redundant
     if( board[r1+2][c1-1] == ' ' ) { if( (c1-1) > -1 ) printf( "%d%d, " , r1+2, c1-1 ) ; }
                                                 ^
3_Implementations/chess.c:183:15: note: Negative array index
     if( board[r1-2][c1-1] == ' ' )
              ^
3_Implementations/chess.c:128:10: style: Unused variable: i [unusedVariable]
     int i , j , n ;
         ^
3_Implementations/chess.c:128:14: style: Unused variable: j [unusedVariable]
     int i , j , n ;
             ^
3_Implementations/chess.c:203:18: style: Unused variable: c [unusedVariable]
     int a , b , c , d ;
                 ^
3_Implementations/chess.c:203:22: style: Unused variable: d [unusedVariable]
     int a , b , c , d ;
                     ^
3_Implementations/unity/unity.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
3_Implementations/unity/unity.c:276:9: style: The scope of the variable 'nibble' can be reduced. [variableScope]
    int nibble;
        ^
3_Implementations/unity/unity.c:1351:18: style: The scope of the variable 'i' can be reduced. [variableScope]
    UNITY_UINT32 i;
                 ^
3_Implementations/unity/unity.c:1391:18: style: The scope of the variable 'i' can be reduced. [variableScope]
    UNITY_UINT32 i;
                 ^
3_Implementations/unity/unity.c:1515:18: style: The scope of the variable 'bytes' can be reduced. [variableScope]
    UNITY_UINT32 bytes;
                 ^
3_Implementations/unity/unity.c:1759:28: style:inconclusive: Function 'UnityFail' argument 1 names different: declaration 'message' definition 'msg'. [funcArgNamesDifferent]
void UnityFail(const char* msg, const UNITY_LINE_TYPE line)
                           ^
3_Implementations/unity/unity_internals.h:620:28: note: Function 'UnityFail' argument 1 names different: declaration 'message' definition 'msg'.
void UnityFail(const char* message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn);
                           ^
3_Implementations/unity/unity.c:1759:28: note: Function 'UnityFail' argument 1 names different: declaration 'message' definition 'msg'.
void UnityFail(const char* msg, const UNITY_LINE_TYPE line)
                           ^
3_Implementations/unity/unity.c:1796:30: style:inconclusive: Function 'UnityIgnore' argument 1 names different: declaration 'message' definition 'msg'. [funcArgNamesDifferent]
void UnityIgnore(const char* msg, const UNITY_LINE_TYPE line)
                             ^
3_Implementations/unity/unity_internals.h:621:30: note: Function 'UnityIgnore' argument 1 names different: declaration 'message' definition 'msg'.
void UnityIgnore(const char* message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn);
                             ^
3_Implementations/unity/unity.c:1796:30: note: Function 'UnityIgnore' argument 1 names different: declaration 'message' definition 'msg'.
void UnityIgnore(const char* msg, const UNITY_LINE_TYPE line)
                             ^
3_Implementations/unity/unity.c:1812:31: style:inconclusive: Function 'UnityMessage' argument 1 names different: declaration 'message' definition 'msg'. [funcArgNamesDifferent]
void UnityMessage(const char* msg, const UNITY_LINE_TYPE line)
                              ^
3_Implementations/unity/unity_internals.h:622:31: note: Function 'UnityMessage' argument 1 names different: declaration 'message' definition 'msg'.
void UnityMessage(const char* message, const UNITY_LINE_TYPE line);
                              ^
3_Implementations/unity/unity.c:1812:31: note: Function 'UnityMessage' argument 1 names different: declaration 'message' definition 'msg'.
void UnityMessage(const char* msg, const UNITY_LINE_TYPE line)
                              ^
3_Implementations/unity/unity.c:1432:20: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    UNITY_UINT32 i = 0;
                   ^
3_Implementations/unity/unity.c:1834:0: information: Skipping configuration 'UNITY_CLOCK_MS;UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_EXEC_TIME_START' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_EXEC_TIME_START();
^
3_Implementations/unity/unity.c:1844:0: information: Skipping configuration 'UNITY_CLOCK_MS;UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_EXEC_TIME_STOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_EXEC_TIME_STOP();
^
3_Implementations/unity/unity.c:558:0: information: Skipping configuration 'UNITY_CLOCK_MS;UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_PRINT_EXEC_TIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_PRINT_EXEC_TIME();
^
3_Implementations/unity/unity_internals.h:471:0: information: Skipping configuration 'UNITY_CLOCK_MS;UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_TIME_TYPE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_TIME_TYPE CurrentTestStartTime;
^
3_Implementations/unity/unity_internals.h:472:0: information: Skipping configuration 'UNITY_CLOCK_MS;UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_TIME_TYPE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_TIME_TYPE CurrentTestStopTime;
^
3_Implementations/unity/unity.c:1834:0: information: Skipping configuration 'UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_EXEC_TIME_START' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_EXEC_TIME_START();
^
3_Implementations/unity/unity.c:1844:0: information: Skipping configuration 'UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_EXEC_TIME_STOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_EXEC_TIME_STOP();
^
3_Implementations/unity/unity.c:558:0: information: Skipping configuration 'UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_PRINT_EXEC_TIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_PRINT_EXEC_TIME();
^
3_Implementations/unity/unity_internals.h:471:0: information: Skipping configuration 'UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_TIME_TYPE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_TIME_TYPE CurrentTestStartTime;
^
3_Implementations/unity/unity_internals.h:472:0: information: Skipping configuration 'UNITY_EXEC_TIME_START;UNITY_EXEC_TIME_STOP;UNITY_PRINT_EXEC_TIME;UNITY_TIME_TYPE;UNITY_INCLUDE_EXEC_TIME' since the value of 'UNITY_TIME_TYPE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    UNITY_TIME_TYPE CurrentTestStopTime;
^
3_Implementations/unity/unity.c:685:0: style: The function 'UnityAssertBits' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:904:0: style: The function 'UnityAssertEqualFloatArray' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:774:0: style: The function 'UnityAssertEqualIntArray' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1504:0: style: The function 'UnityAssertEqualMemory' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:706:0: style: The function 'UnityAssertEqualNumber' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1346:0: style: The function 'UnityAssertEqualString' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1425:0: style: The function 'UnityAssertEqualStringArray' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1385:0: style: The function 'UnityAssertEqualStringLen' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:971:0: style: The function 'UnityAssertFloatSpecial' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:952:0: style: The function 'UnityAssertFloatsWithin' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:727:0: style: The function 'UnityAssertGreaterOrLessOrEqualNumber' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1226:0: style: The function 'UnityAssertNumbersArrayWithin' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1179:0: style: The function 'UnityAssertNumbersWithin' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1856:0: style: The function 'UnityBegin' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1828:0: style: The function 'UnityDefaultTestRun' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1872:0: style: The function 'UnityEnd' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1759:0: style: The function 'UnityFail' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1611:0: style: The function 'UnityFloatToPtr' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1796:0: style: The function 'UnityIgnore' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1812:0: style: The function 'UnityMessage' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1585:0: style: The function 'UnityNumToPtr' is never used. [unusedFunction]

^
3_Implementations/unity/unity.c:1850:0: style: The function 'UnitySetTestFile' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingIncludeSystem]

